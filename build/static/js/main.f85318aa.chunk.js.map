{"version":3,"sources":["Flexi/components/DropDown/index.js","Flexi/components/TextField/index.js","Flexi/index.js","index.js"],"names":["DropDown","_ref","label","name","_ref$val","val","handleChange","react_default","a","createElement","onChange","value","map","el","index","key","TextField","type","Flexi","state","onSubmit","e","preventDefault","_this","props","event","setState","Object","defineProperty","target","_this2","this","config","items","components_TextField","components_DropDown","values","React","Component","App","flexiConfig","onFlexiSubmit","console","log","src_Flexi","rootElement","document","getElementById","ReactDOM","render","src_App"],"mappings":"2MAgBeA,EAdE,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,KAAVC,EAAAH,EAAgBI,WAAhB,IAAAD,EAAsB,GAAtBA,EAA0BE,EAA1BL,EAA0BK,aAA1B,OACfC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aAAQP,GACRK,EAAAC,EAAAC,cAAA,UAAQN,KAAMA,EAAMO,SAAUJ,GAC5BC,EAAAC,EAAAC,cAAA,UAAQE,MAAM,KACbN,EAAIO,IAAI,SAACC,EAAIC,GAAL,OACPP,EAAAC,EAAAC,cAAA,UAAQM,IAAKD,EAAOH,MAAOE,GACxBA,QCAIG,EAPG,SAAAf,GAAA,IAAGC,EAAHD,EAAGC,MAAOC,EAAVF,EAAUE,KAAME,EAAhBJ,EAAgBI,IAAKC,EAArBL,EAAqBK,aAArB,OAChBC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,aAAQP,GACRK,EAAAC,EAAAC,cAAA,SAAOQ,KAAK,OAAON,MAAON,EAAKF,KAAMA,EAAMO,SAAUJ,MCwD1CY,6MAxDbC,MAAQ,KAERC,SAAW,SAAAC,GACTA,EAAEC,iBACEC,EAAKC,MAAMJ,UACbG,EAAKC,MAAMJ,SAASG,EAAKJ,UAI7Bb,aAAe,SAAAmB,GACbF,EAAKG,SAALC,OAAAC,EAAA,EAAAD,CAAA,GACGF,EAAMI,OAAO1B,KAAOsB,EAAMI,OAAOlB,iFAG7B,IAAAmB,EAAAC,KACHC,EAASD,KAAKP,MAAMQ,OAAOC,MAE/B,OACE1B,EAAAC,EAAAC,cAAA,QACEW,SAAU,SAAAC,GACRS,EAAKV,SAASC,KAGfW,EAAOpB,IAAI,SAACC,EAAIC,GACf,MAAgB,cAAZD,EAAGI,KAEHV,EAAAC,EAAAC,cAACyB,EAAD,CACEnB,IAAKD,EACLZ,MAAOW,EAAGX,MACVC,KAAMU,EAAGV,KACTE,IAAKQ,EAAGF,MACRL,aAAcwB,EAAKxB,eAKT,aAAZO,EAAGI,KAEHV,EAAAC,EAAAC,cAAC0B,EAAD,CACEpB,IAAKD,EACLZ,MAAOW,EAAGX,MACVC,KAAMU,EAAGV,KACTE,IAAKQ,EAAGuB,OACR9B,aAAcwB,EAAKxB,eAIlB,OAGTC,EAAAC,EAAAC,cAAA,UAAQQ,KAAK,UAAb,kBAnDYoB,IAAMC,WCEpBC,6MACJpB,MAAQ,KAERqB,YAAc,CACZP,MAAO,CACL,CACElB,IAAK,EACLZ,KAAM,cACND,MAAO,gBACPe,KAAM,aAER,CACEF,IAAK,EACLZ,KAAM,QACND,MAAO,QACPe,KAAM,aAER,CACEF,IAAK,EACLZ,KAAM,UACND,MAAO,UACPe,KAAM,WACNmB,OAAQ,CAAC,QAAS,OAEpB,CACErB,IAAK,EACLZ,KAAM,SACND,MAAO,iBACPe,KAAM,WACNmB,OAAQ,CAAC,cAAe,SAAU,mBAKxCK,cAAgB,SAAAT,GACdU,QAAQC,IAAIX,GACZT,EAAKG,SAAS,CACZM,oFAIK,IACDQ,EAA+BT,KAA/BS,YAAaC,EAAkBV,KAAlBU,cAEnB,OACElC,EAAAC,EAAAC,cAACmC,EAAD,CAAOxB,SAAU,SAAAY,GAAM,OAAIS,EAAcT,IAASA,OAAQQ,WA7C9CH,IAAMC,WAkDlBO,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OAAO1C,EAAAC,EAAAC,cAACyC,EAAD,MAASL","file":"static/js/main.f85318aa.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst DropDown = ({ label, name, val = [], handleChange }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <select name={name} onChange={handleChange}>\r\n      <option value=\"\" />\r\n      {val.map((el, index) => (\r\n        <option key={index} value={el}>\r\n          {el}\r\n        </option>\r\n      ))}\r\n    </select>\r\n  </div>\r\n);\r\n\r\nexport default DropDown;\r\n","import React from \"react\";\r\n\r\nconst TextField = ({ label, name, val, handleChange }) => (\r\n  <div>\r\n    <label>{label}</label>\r\n    <input type=\"text\" value={val} name={name} onChange={handleChange} />\r\n  </div>\r\n);\r\n\r\nexport default TextField;\r\n","import React from \"react\";\r\nimport DropDown from \"./components/DropDown/index\";\r\nimport TextField from \"./components/TextField/index\";\r\n\r\nclass Flexi extends React.Component {\r\n  state = {};\r\n\r\n  onSubmit = e => {\r\n    e.preventDefault();\r\n    if (this.props.onSubmit) {\r\n      this.props.onSubmit(this.state);\r\n    }\r\n  };\r\n\r\n  handleChange = event => {\r\n    this.setState({\r\n      [event.target.name]: event.target.value\r\n    });\r\n  };\r\n  render() {\r\n    let config = this.props.config.items;\r\n\r\n    return (\r\n      <form\r\n        onSubmit={e => {\r\n          this.onSubmit(e);\r\n        }}\r\n      >\r\n        {config.map((el, index) => {\r\n          if (el.type === \"TextField\") {\r\n            return (\r\n              <TextField\r\n                key={index}\r\n                label={el.label}\r\n                name={el.name}\r\n                val={el.value}\r\n                handleChange={this.handleChange}\r\n              />\r\n            );\r\n          }\r\n\r\n          if (el.type === \"DropDown\") {\r\n            return (\r\n              <DropDown\r\n                key={index}\r\n                label={el.label}\r\n                name={el.name}\r\n                val={el.values}\r\n                handleChange={this.handleChange}\r\n              />\r\n            );\r\n          }\r\n          return null;\r\n        })}\r\n\r\n        <button type=\"submit\">Submit</button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Flexi;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport \"./styles.css\";\r\nimport Flexi from \"./Flexi/index\";\r\n\r\nclass App extends React.Component {\r\n  state = {};\r\n\r\n  flexiConfig = {\r\n    items: [\r\n      {\r\n        key: 1,\r\n        name: \"person_name\",\r\n        label: \"Person's Name\",\r\n        type: \"TextField\"\r\n      },\r\n      {\r\n        key: 2,\r\n        name: \"email\",\r\n        label: \"Email\",\r\n        type: \"TextField\"\r\n      },\r\n      {\r\n        key: 3,\r\n        name: \"country\",\r\n        label: \"Country\",\r\n        type: \"DropDown\",\r\n        values: [\"India\", \"US\"]\r\n      },\r\n      {\r\n        key: 4,\r\n        name: \"states\",\r\n        label: \"Person's State\",\r\n        type: \"DropDown\",\r\n        values: [\"Maharashtra\", \"Kerala\", \"Tamil Nadu\"]\r\n      }\r\n    ]\r\n  };\r\n\r\n  onFlexiSubmit = config => {\r\n    console.log(config);\r\n    this.setState({\r\n      config\r\n    });\r\n  };\r\n\r\n  render() {\r\n    let { flexiConfig, onFlexiSubmit } = this;\r\n\r\n    return (\r\n      <Flexi onSubmit={config => onFlexiSubmit(config)} config={flexiConfig} />\r\n    );\r\n  }\r\n}\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}